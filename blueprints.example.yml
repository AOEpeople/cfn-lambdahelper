blueprints:

  # Lambda function
  - stackname: cfnhelper-stack
    description: 'AWS Lambda function for custom CloudFormation resources'
    template:
      - elasticache-tagger/function.template
      - route53-lookup/function.template
      - route53-updater/function.template
      - stack-deleter/function.template
    Capabilities: CAPABILITY_IAM

  # Route53 Updater Example
  - stackname: route53-updater-example-stack
    template: route53-updater/example-usage.template
    parameters:
      R53Updater: '{output:cfnhelper-stack:Route53UpdaterArn}'
      HostedZoneId: 'insertyourhostedzone'

  # StackDeleter Example
  - stackname: stack-deleter-example-stack
    template: stack-deleter/example-usage.template
    parameters:
      StackDeleter: '{output:cfnhelper-stack:StackDeleterArn}'

  # ElastiCacheTagger Example
  - stackname: elasticache-tagger-example-stack
    template: elasticache-tagger/example-usage.template
    parameters:
      ElastiCacheTagger: '{output:cfnhelper-stack:ElastiCacheTaggerArn}'

  # Green/Blue Switcher
  - stackname: 'greenblueswitcher'
    template: 'greenblue-switcher/function.template'
    Capabilities: CAPABILITY_IAM
    vars:
      bucket: 'my-bucket'
      key: 'lambda/greenblue_{tstamp}.zip'
    parameters:
      S3Bucket: '{var:bucket}'
      S3Key: '{var:key}'
    before:
    - 'TMP=$(mktemp -d) && echo "Created temp dir: ${TMP}"'
    - 'cp cfn-lambdahelper/greenblue-switcher/function.js "${TMP}/"'
    - 'cd "${TMP}"'
    - 'npm install async'
    - 'zip -r greenblue.zip function.js node_modules/'
    - 'aws s3 cp greenblue.zip s3://{var:bucket}/{var:key}'
    - 'rm -rf "${TMP}"'